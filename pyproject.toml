[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "openapi-agent"
version = "0.1.0"
description = "A Python package for interacting with OpenAPI-based services"
authors = ["Lucas X <xianminx@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "openapi_agent"}]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["openapi", "api", "agent"]

[tool.poetry.dependencies]
python = "^3.10"
requests = "*"
pyyaml = "*"
openai = "^1.52.0"
swarm = {git = "https://github.com/openai/swarm.git"}

[tool.poetry.extras]
examples = ["spotify"]

[tool.poetry.scripts]
openapi-agent-demo = "examples.basic.demo:main"

[tool.poetry.urls]
Homepage = "https://github.com/xianminx/openapi-agent"
"Bug Tracker" = "https://github.com/xianminx/openapi-agent/issues"

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line-length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
